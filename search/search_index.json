{"config":{"lang":["ru"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"T-Invest pip install tinvest \u0414\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 Python \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 OpenAPI \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444 \u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0445 \u0440\u043e\u0431\u043e\u0442\u043e\u0432. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0438 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 API \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444 \u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0438. \u041d\u0430\u0447\u0430\u043b\u043e \u0440\u0430\u0431\u043e\u0442\u044b \u0413\u0434\u0435 \u0432\u0437\u044f\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438? \u0412 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439 \u0432\u0430\u0448\u0435\u0433\u043e \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 tinkoff . \u0414\u0430\u043b\u0435\u0435: \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f \"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0434\u0435\u043b\u043e\u043a \u043a\u043e\u0434\u043e\u043c\" \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u0412\u044b\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0442\u043e\u043a\u0435\u043d \u0434\u043b\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u0438 \u043d\u0430 \u0431\u0438\u0440\u0436\u0435 \u0438 \u0440\u0435\u0436\u0438\u043c\u0430 \"\u043f\u0435\u0441\u043e\u0447\u043d\u0438\u0446\u044b\" (sandbox) \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0442\u043e\u043a\u0435\u043d \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435, \u0442\u043e\u043a\u0435\u043d \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437, \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0435\u0433\u043e \u043f\u043e\u0437\u0436\u0435 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f, \u0442\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u043a\u0435\u043d\u043e\u0432 \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f tinvest invest-openapi \u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442 \u0414\u043b\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 OpenAPI \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041a\u043b\u0438\u0435\u043d\u0442\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043d\u0430 streaming \u0438 rest. \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f SDK \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u043d\u0438\u0436\u0435. \u0423 \u043c\u0435\u043d\u044f \u0435\u0441\u0442\u044c \u0432\u043e\u043f\u0440\u043e\u0441 \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439 \u2014 \u0432 \u043d\u0435\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u0434\u0430\u0442\u044c \u0432\u043e\u043f\u0440\u043e\u0441 \u0432 Issues \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0435\u043b\u0438\u0437\u0430\u0445 \u0432 Releases. \u0415\u0441\u043b\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u044e\u0442 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 SDK, \u043d\u0430\u0448\u0451\u043b\u0441\u044f \u0431\u0430\u0433 \u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044e, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u0435\u0433\u043e \u0432 Issues. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438. tinvest issues tinvest issues openapi \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c \u043f\u0430\u043a\u0435\u0442\u043e\u043c \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0438\u0437\u0443\u0447\u0438\u0442\u044c OpenAPI \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444 \u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0438 Streaming \u0412 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441, \u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b. \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u0432 \u0442\u0440\u0435\u0434\u043f\u0443\u043b\u0435. \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043c\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438. \u0412\u0441\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u043a\u043e\u043d\u043a\u0443\u0440\u0435\u043d\u0442\u043d\u043e. \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u043b\u0433\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0439\u0442\u0435 \u0435\u0451 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0442\u0430\u0441\u043a\u0435 \u0438\u043b\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435. \u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u0440\u0435\u043c\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0432 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u0435 \u043f\u043e\u0434 \u0438\u043c\u0435\u043d\u0435\u043c server_time . \u0412 \u0445\u0435\u043d\u0434\u043b\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 datetime . \u041f\u0440\u0438 \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0441\u0431\u043e\u044f\u0445 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0430 \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043f\u0435\u0440\u0435\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. import asyncio from datetime import datetime import tinvest TOKEN = \"<TOKEN>\" events = tinvest . StreamingEvents () @events . reconnect () def handle_reconnect (): print ( 'Reconnecting' ) @events . candle () async def handle_candle ( api : tinvest . StreamingApi , payload : tinvest . CandleStreaming , server_time : datetime # [optional] if you want ): print ( payload ) @events . orderbook () async def handle_orderbook ( api : tinvest . StreamingApi , payload : tinvest . OrderbookStreaming ): print ( payload ) @events . instrument_info () async def handle_instrument_info ( api : tinvest . StreamingApi , payload : tinvest . InstrumentInfoStreaming ): print ( payload ) @events . error () async def handle_error ( api : tinvest . StreamingApi , payload : tinvest . ErrorStreaming ): print ( payload ) @events . startup () async def startup ( api : tinvest . StreamingApi ): await api . candle . subscribe ( \"BBG0013HGFT4\" , tinvest . CandleResolution . min1 ) await api . orderbook . subscribe ( \"BBG0013HGFT4\" , 5 , \"123ASD1123\" ) await api . instrument_info . subscribe ( \"BBG0013HGFT4\" ) @events . cleanup () async def cleanup ( api : tinvest . StreamingApi ): await api . candle . unsubscribe ( \"BBG0013HGFT4\" , \"1min\" ) await api . orderbook . unsubscribe ( \"BBG0013HGFT4\" , 5 ) await api . instrument_info . unsubscribe ( \"BBG0013HGFT4\" ) async def main (): await tinvest . Streaming ( TOKEN , state = { \"postgres\" : ... }) . add_handlers ( events ) . run () if __name__ == \"__main__\" : try : asyncio . run ( main ()) except KeyboardInterrupt : pass \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 REST API Client \u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 requests . \u0421 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u043f\u043e \u044d\u0442\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0435 . \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u044d\u0442\u043e \u0442\u0438\u043f\u0438\u0447\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 requests.Response , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043c\u0435\u0435\u0442 \u043c\u0435\u0442\u043e\u0434\u044b parse_json \u0438 parse_error . \u042d\u0442\u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 pydantic.BaseModel . import tinvest TOKEN = \"<TOKEN>\" client = tinvest . SyncClient ( TOKEN ) api = tinvest . PortfolioApi ( client ) response = api . portfolio_get () # requests.Response if response . status_code == 200 : print ( response . parse_json ()) # tinvest.PortfolioResponse # Handle error ... api = tinvest . OperationsApi ( client ) response = api . operations_get ( \"\" , \"\" ) if response . status_code != 200 : print ( response . parse_error ()) # tinvest.Error \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 REST API Client \u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 aiohttp . \u041a\u043b\u0438\u0435\u043d\u0442\u044b \u0438\u043c\u0435\u044e\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043a\u0430\u043a \u0432 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u0440\u0443\u0442\u0438\u043d\u0430. import asyncio import tinvest TOKEN = \"<TOKEN>\" client = tinvest . AsyncClient ( TOKEN ) api = tinvest . PortfolioApi ( client ) async def request (): async with api . portfolio_get () as response : # aiohttp.ClientResponse if response . status == 200 : print ( await response . parse_json ()) # tinvest.PortfolioResponse loop = asyncio . get_event_loop () loop . run_until_complete ( request ()) Sandbox Sandbox \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435 \u0442\u0440\u0430\u0442\u044f \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 Production \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435\u043c. client = tinvest . AsyncClient ( SANDBOX_TOKEN , use_sandbox = True ) # client = tinvest.SyncClient(SANDBOX_TOKEN, use_sandbox=True) api = tinvest . SandboxApi ( client ) Contributing \u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0439\u0442\u0435 \u0441\u0432\u043e\u0438 \u043f\u0443\u043b\u043b \u0440\u0435\u043a\u0432\u0435\u0441\u0442\u044b, \u043f\u0440\u043e\u0435\u043a\u0442 \u0441 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c \u043a\u043e\u0434\u043e\u043c.","title":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f"},{"location":"#t-invest","text":"pip install tinvest \u0414\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0435\u043a\u0442 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 Python \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 OpenAPI \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444 \u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0445 \u0440\u043e\u0431\u043e\u0442\u043e\u0432. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0438 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 API \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444 \u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0438.","title":"T-Invest"},{"location":"#_1","text":"","title":"\u041d\u0430\u0447\u0430\u043b\u043e \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"#_2","text":"\u0412 \u0440\u0430\u0437\u0434\u0435\u043b\u0435 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439 \u0432\u0430\u0448\u0435\u0433\u043e \u043b\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430 tinkoff . \u0414\u0430\u043b\u0435\u0435: \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u044f \"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0441\u0434\u0435\u043b\u043e\u043a \u043a\u043e\u0434\u043e\u043c\" \u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0430 \u0412\u044b\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0442\u043e\u043a\u0435\u043d \u0434\u043b\u044f \u0442\u043e\u0440\u0433\u043e\u0432\u043b\u0438 \u043d\u0430 \u0431\u0438\u0440\u0436\u0435 \u0438 \u0440\u0435\u0436\u0438\u043c\u0430 \"\u043f\u0435\u0441\u043e\u0447\u043d\u0438\u0446\u044b\" (sandbox) \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u0442\u043e\u043a\u0435\u043d \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u0435, \u0442\u043e\u043a\u0435\u043d \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437, \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0435\u0433\u043e \u043f\u043e\u0437\u0436\u0435 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f, \u0442\u0435\u043c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043d\u0435\u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u043a\u0435\u043d\u043e\u0432","title":"\u0413\u0434\u0435 \u0432\u0437\u044f\u0442\u044c \u0442\u043e\u043a\u0435\u043d \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438?"},{"location":"#_3","text":"tinvest invest-openapi","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f"},{"location":"#_4","text":"\u0414\u043b\u044f \u043d\u0435\u043f\u043e\u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 OpenAPI \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041a\u043b\u0438\u0435\u043d\u0442\u044b \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u044b \u043d\u0430 streaming \u0438 rest. \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f SDK \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u043d\u0438\u0436\u0435.","title":"\u0411\u044b\u0441\u0442\u0440\u044b\u0439 \u0441\u0442\u0430\u0440\u0442"},{"location":"#_5","text":"\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0441 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439 \u2014 \u0432 \u043d\u0435\u043c \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u0434\u0430\u0442\u044c \u0432\u043e\u043f\u0440\u043e\u0441 \u0432 Issues \u0438 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0440\u0435\u043b\u0438\u0437\u0430\u0445 \u0432 Releases. \u0415\u0441\u043b\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u0430\u044e\u0442 \u0432\u043e\u043f\u0440\u043e\u0441\u044b \u043f\u043e \u0434\u0430\u043d\u043d\u043e\u043c\u0443 SDK, \u043d\u0430\u0448\u0451\u043b\u0441\u044f \u0431\u0430\u0433 \u0438\u043b\u0438 \u0435\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044e, \u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u0434\u0430\u0442\u044c \u0435\u0433\u043e \u0432 Issues. \u0422\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438. tinvest issues tinvest issues openapi","title":"\u0423 \u043c\u0435\u043d\u044f \u0435\u0441\u0442\u044c \u0432\u043e\u043f\u0440\u043e\u0441"},{"location":"#_6","text":"\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c \u043f\u0430\u043a\u0435\u0442\u043e\u043c \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0438\u0437\u0443\u0447\u0438\u0442\u044c OpenAPI \u0422\u0438\u043d\u044c\u043a\u043e\u0444\u0444 \u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0438","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b"},{"location":"#streaming","text":"\u0412 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441, \u043d\u043e \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b. \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u0432 \u0442\u0440\u0435\u0434\u043f\u0443\u043b\u0435. \u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043c\u0438, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438. \u0412\u0441\u0435 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u044b \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u0431\u0443\u0434\u0443\u0442 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u044b \u043a\u043e\u043d\u043a\u0443\u0440\u0435\u043d\u0442\u043d\u043e. \u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u0431\u044b\u0442\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0443\u0441\u043f\u0435\u0448\u043d\u043e\u0439 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u043f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0435\u0433\u043e. \u0415\u0441\u043b\u0438 \u0443 \u0432\u0430\u0441 \u043f\u043b\u0430\u043d\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0434\u043e\u043b\u0433\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0439\u0442\u0435 \u0435\u0451 \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0442\u0430\u0441\u043a\u0435 \u0438\u043b\u0438 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0435. \u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u0440\u0435\u043c\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0442\u043e \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0432 \u0445\u0435\u043d\u0434\u043b\u0435\u0440\u0435 \u043f\u043e\u0434 \u0438\u043c\u0435\u043d\u0435\u043c server_time . \u0412 \u0445\u0435\u043d\u0434\u043b\u0435\u0440 \u0431\u0443\u0434\u0435\u0442 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 datetime . \u041f\u0440\u0438 \u0441\u0435\u0442\u0435\u0432\u044b\u0445 \u0441\u0431\u043e\u044f\u0445 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0430 \u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043f\u0435\u0440\u0435\u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f. import asyncio from datetime import datetime import tinvest TOKEN = \"<TOKEN>\" events = tinvest . StreamingEvents () @events . reconnect () def handle_reconnect (): print ( 'Reconnecting' ) @events . candle () async def handle_candle ( api : tinvest . StreamingApi , payload : tinvest . CandleStreaming , server_time : datetime # [optional] if you want ): print ( payload ) @events . orderbook () async def handle_orderbook ( api : tinvest . StreamingApi , payload : tinvest . OrderbookStreaming ): print ( payload ) @events . instrument_info () async def handle_instrument_info ( api : tinvest . StreamingApi , payload : tinvest . InstrumentInfoStreaming ): print ( payload ) @events . error () async def handle_error ( api : tinvest . StreamingApi , payload : tinvest . ErrorStreaming ): print ( payload ) @events . startup () async def startup ( api : tinvest . StreamingApi ): await api . candle . subscribe ( \"BBG0013HGFT4\" , tinvest . CandleResolution . min1 ) await api . orderbook . subscribe ( \"BBG0013HGFT4\" , 5 , \"123ASD1123\" ) await api . instrument_info . subscribe ( \"BBG0013HGFT4\" ) @events . cleanup () async def cleanup ( api : tinvest . StreamingApi ): await api . candle . unsubscribe ( \"BBG0013HGFT4\" , \"1min\" ) await api . orderbook . unsubscribe ( \"BBG0013HGFT4\" , 5 ) await api . instrument_info . unsubscribe ( \"BBG0013HGFT4\" ) async def main (): await tinvest . Streaming ( TOKEN , state = { \"postgres\" : ... }) . add_handlers ( events ) . run () if __name__ == \"__main__\" : try : asyncio . run ( main ()) except KeyboardInterrupt : pass","title":"Streaming"},{"location":"#rest-api-client","text":"\u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 requests . \u0421 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u043f\u043e \u044d\u0442\u043e\u0439 \u0441\u0441\u044b\u043b\u043a\u0435 . \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c\u044b\u0439 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u044d\u0442\u043e \u0442\u0438\u043f\u0438\u0447\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 requests.Response , \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043c\u0435\u0435\u0442 \u043c\u0435\u0442\u043e\u0434\u044b parse_json \u0438 parse_error . \u042d\u0442\u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u044b, \u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043e\u0442 \u043a\u043b\u0430\u0441\u0441\u0430 pydantic.BaseModel . import tinvest TOKEN = \"<TOKEN>\" client = tinvest . SyncClient ( TOKEN ) api = tinvest . PortfolioApi ( client ) response = api . portfolio_get () # requests.Response if response . status_code == 200 : print ( response . parse_json ()) # tinvest.PortfolioResponse # Handle error ... api = tinvest . OperationsApi ( client ) response = api . operations_get ( \"\" , \"\" ) if response . status_code != 200 : print ( response . parse_error ()) # tinvest.Error","title":"\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 REST API Client"},{"location":"#rest-api-client_1","text":"\u0414\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 aiohttp . \u041a\u043b\u0438\u0435\u043d\u0442\u044b \u0438\u043c\u0435\u044e\u0442 \u0442\u0430\u043a\u043e\u0439 \u0436\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043a\u0430\u043a \u0432 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u0437\u0430 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u044e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442 \u043a\u043e\u0440\u0443\u0442\u0438\u043d\u0430. import asyncio import tinvest TOKEN = \"<TOKEN>\" client = tinvest . AsyncClient ( TOKEN ) api = tinvest . PortfolioApi ( client ) async def request (): async with api . portfolio_get () as response : # aiohttp.ClientResponse if response . status == 200 : print ( await response . parse_json ()) # tinvest.PortfolioResponse loop = asyncio . get_event_loop () loop . run_until_complete ( request ())","title":"\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 REST API Client"},{"location":"#sandbox","text":"Sandbox \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0432\u0430\u043c \u043f\u043e\u043f\u0440\u043e\u0431\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0438 \u0442\u043e\u0440\u0433\u043e\u0432\u044b\u0435 \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0435 \u0442\u0440\u0430\u0442\u044f \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430. \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442 \u0441 Production \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435\u043c. client = tinvest . AsyncClient ( SANDBOX_TOKEN , use_sandbox = True ) # client = tinvest.SyncClient(SANDBOX_TOKEN, use_sandbox=True) api = tinvest . SandboxApi ( client )","title":"Sandbox"},{"location":"#contributing","text":"\u041f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0439\u0442\u0435 \u0441\u0432\u043e\u0438 \u043f\u0443\u043b\u043b \u0440\u0435\u043a\u0432\u0435\u0441\u0442\u044b, \u043f\u0440\u043e\u0435\u043a\u0442 \u0441 \u043e\u0442\u043a\u0440\u044b\u0442\u044b\u043c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u043c \u043a\u043e\u0434\u043e\u043c.","title":"Contributing"},{"location":"tinvest/apis/","text":"tinvest/apis.py MarketApi market_bonds_get ( self , ** kwargs ) GET /market/bonds Source code in tinvest/apis.py 233 234 235 236 237 238 239 240 def market_bonds_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/bonds\"\"\" return self . client . request ( 'GET' , '/market/bonds' , response_model = MarketInstrumentListResponse , ** kwargs , ) market_candles_get ( self , figi , from_ , to , interval , ** kwargs ) GET /market/candles Source code in tinvest/apis.py 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 def market_candles_get ( self , figi : str , from_ : datetime_or_str , to : datetime_or_str , interval : CandleResolution , ** kwargs : Any ) -> Any : \"\"\"GET /market/candles\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) params . setdefault ( 'from' , isoformat ( from_ )) params . setdefault ( 'to' , isoformat ( to )) params . setdefault ( 'interval' , interval . value ) return self . client . request ( 'GET' , '/market/candles' , response_model = CandlesResponse , ** kwargs ) market_currencies_get ( self , ** kwargs ) GET /market/currencies Source code in tinvest/apis.py 251 252 253 254 255 256 257 258 def market_currencies_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/currencies\"\"\" return self . client . request ( 'GET' , '/market/currencies' , response_model = MarketInstrumentListResponse , ** kwargs , ) market_etfs_get ( self , ** kwargs ) GET /market/etfs Source code in tinvest/apis.py 242 243 244 245 246 247 248 249 def market_etfs_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/etfs\"\"\" return self . client . request ( 'GET' , '/market/etfs' , response_model = MarketInstrumentListResponse , ** kwargs , ) market_orderbook_get ( self , figi , depth , ** kwargs ) GET /market/orderbook Source code in tinvest/apis.py 260 261 262 263 264 265 266 267 268 def market_orderbook_get ( self , figi : str , depth : int , ** kwargs : Any ) -> Any : \"\"\"GET /market/orderbook\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) params . setdefault ( 'depth' , depth ) return self . client . request ( 'GET' , '/market/orderbook' , response_model = OrderbookResponse , ** kwargs , ) market_search_by_figi_get ( self , figi , ** kwargs ) GET /market/search/by-figi Source code in tinvest/apis.py 289 290 291 292 293 294 295 296 297 298 299 def market_search_by_figi_get ( self , figi : str , ** kwargs : Any ) -> Any : \"\"\"GET /market/search/by-figi\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) return self . client . request ( 'GET' , '/market/search/by-figi' , response_model = SearchMarketInstrumentResponse , ** kwargs , ) market_search_by_ticker_get ( self , ticker , ** kwargs ) GET /market/search/by-ticker Source code in tinvest/apis.py 301 302 303 304 305 306 307 308 309 310 311 def market_search_by_ticker_get ( self , ticker : str , ** kwargs : Any ) -> Any : \"\"\"GET /market/search/by-ticker\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'ticker' , ticker ) return self . client . request ( 'GET' , '/market/search/by-ticker' , response_model = MarketInstrumentListResponse , ** kwargs , ) market_stocks_get ( self , ** kwargs ) GET /market/stocks Source code in tinvest/apis.py 224 225 226 227 228 229 230 231 def market_stocks_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/stocks\"\"\" return self . client . request ( 'GET' , '/market/stocks' , response_model = MarketInstrumentListResponse , ** kwargs , ) OperationsApi operations_get ( self , from_ , to , figi = None , ** kwargs ) GET /operations Source code in tinvest/apis.py 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 def operations_get ( self , from_ : datetime_or_str , to : datetime_or_str , figi : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /operations\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'from' , isoformat ( from_ )) params . setdefault ( 'to' , isoformat ( to )) if figi : params . setdefault ( 'figi' , figi ) return self . client . request ( 'GET' , '/operations' , response_model = OperationsResponse , ** kwargs ) OrdersApi orders_cancel_post ( self , order_id , broker_account_id = None , ** kwargs ) POST /orders/cancel Source code in tinvest/apis.py 180 181 182 183 184 185 186 187 188 189 190 191 def orders_cancel_post ( self , order_id : str , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /orders/cancel\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'orderId' , order_id ) if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'POST' , '/orders/cancel' , response_model = Empty , ** kwargs ) orders_get ( self , broker_account_id = None , ** kwargs ) GET /orders Source code in tinvest/apis.py 134 135 136 137 138 139 140 141 142 def orders_get ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /orders\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'GET' , '/orders' , response_model = OrdersResponse , ** kwargs ) orders_limit_order_post ( self , figi , body , broker_account_id = None , ** kwargs ) POST /orders/limit-order Source code in tinvest/apis.py 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 def orders_limit_order_post ( self , figi : str , body : LimitOrderRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /orders/limit-order\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/orders/limit-order' , response_model = LimitOrderResponse , ** kwargs , ) orders_market_order_post ( self , figi , body , broker_account_id = None , ** kwargs ) POST /orders/market-order Source code in tinvest/apis.py 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 def orders_market_order_post ( self , figi : str , body : MarketOrderRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /orders/market-order\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/orders/market-order' , response_model = MarketOrderResponse , ** kwargs ) PortfolioApi portfolio_currencies_get ( self , broker_account_id = None , ** kwargs ) GET /portfolio/currencies Source code in tinvest/apis.py 207 208 209 210 211 212 213 214 215 216 217 218 219 220 def portfolio_currencies_get ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /portfolio/currencies\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'GET' , '/portfolio/currencies' , response_model = PortfolioCurrenciesResponse , ** kwargs , ) portfolio_get ( self , broker_account_id = None , ** kwargs ) GET /portfolio Source code in tinvest/apis.py 195 196 197 198 199 200 201 202 203 204 205 def portfolio_get ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /portfolio\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'GET' , '/portfolio' , response_model = PortfolioResponse , ** kwargs ) SandboxApi sandbox_clear_post ( self , broker_account_id = None , ** kwargs ) POST /sandbox/clear Source code in tinvest/apis.py 120 121 122 123 124 125 126 127 128 129 130 def sandbox_clear_post ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /sandbox/clear\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'POST' , '/sandbox/clear' , response_model = Empty , ** kwargs ) sandbox_currencies_balance_post ( self , body , broker_account_id = None , ** kwargs ) POST /sandbox/currencies/balance Source code in tinvest/apis.py 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 def sandbox_currencies_balance_post ( self , body : SandboxSetCurrencyBalanceRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\" POST /sandbox/currencies/balance \"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/sandbox/currencies/balance' , response_model = Empty , ** kwargs , ) sandbox_positions_balance_post ( self , body , broker_account_id = None , ** kwargs ) POST /sandbox/positions/balance Source code in tinvest/apis.py 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 def sandbox_positions_balance_post ( self , body : SandboxSetPositionBalanceRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\" POST /sandbox/positions/balance \"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/sandbox/positions/balance' , response_model = Empty , ** kwargs ) sandbox_register_post ( self , body , ** kwargs ) POST /sandbox/register Source code in tinvest/apis.py 60 61 62 63 64 65 66 67 68 69 70 def sandbox_register_post ( self , body : SandboxRegisterRequest , ** kwargs : Any ) -> Any : \"\"\" POST /sandbox/register \"\"\" kwargs . setdefault ( 'data' , body . json ( by_alias = True )) return self . client . request ( 'POST' , '/sandbox/register' , response_model = SandboxRegisterResponse , ** kwargs , ) sandbox_remove_post ( self , broker_account_id = None , ** kwargs ) POST /sandbox/remove Source code in tinvest/apis.py 108 109 110 111 112 113 114 115 116 117 118 def sandbox_remove_post ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /sandbox/remove\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'POST' , '/sandbox/remove' , response_model = Empty , ** kwargs ) UserApi accounts_get ( self , ** kwargs ) GET /user/accounts Source code in tinvest/apis.py 335 336 337 338 339 def accounts_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /user/accounts\"\"\" return self . client . request ( 'GET' , '/user/accounts' , response_model = UserAccountsResponse , ** kwargs )","title":"apis.py"},{"location":"tinvest/apis/#tinvestapispy","text":"","title":"tinvest/apis.py"},{"location":"tinvest/apis/#tinvest.apis","text":"","title":"tinvest.apis"},{"location":"tinvest/apis/#tinvest.apis.MarketApi","text":"","title":"MarketApi"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_bonds_get","text":"GET /market/bonds Source code in tinvest/apis.py 233 234 235 236 237 238 239 240 def market_bonds_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/bonds\"\"\" return self . client . request ( 'GET' , '/market/bonds' , response_model = MarketInstrumentListResponse , ** kwargs , )","title":"market_bonds_get()"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_candles_get","text":"GET /market/candles Source code in tinvest/apis.py 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 def market_candles_get ( self , figi : str , from_ : datetime_or_str , to : datetime_or_str , interval : CandleResolution , ** kwargs : Any ) -> Any : \"\"\"GET /market/candles\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) params . setdefault ( 'from' , isoformat ( from_ )) params . setdefault ( 'to' , isoformat ( to )) params . setdefault ( 'interval' , interval . value ) return self . client . request ( 'GET' , '/market/candles' , response_model = CandlesResponse , ** kwargs )","title":"market_candles_get()"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_currencies_get","text":"GET /market/currencies Source code in tinvest/apis.py 251 252 253 254 255 256 257 258 def market_currencies_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/currencies\"\"\" return self . client . request ( 'GET' , '/market/currencies' , response_model = MarketInstrumentListResponse , ** kwargs , )","title":"market_currencies_get()"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_etfs_get","text":"GET /market/etfs Source code in tinvest/apis.py 242 243 244 245 246 247 248 249 def market_etfs_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/etfs\"\"\" return self . client . request ( 'GET' , '/market/etfs' , response_model = MarketInstrumentListResponse , ** kwargs , )","title":"market_etfs_get()"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_orderbook_get","text":"GET /market/orderbook Source code in tinvest/apis.py 260 261 262 263 264 265 266 267 268 def market_orderbook_get ( self , figi : str , depth : int , ** kwargs : Any ) -> Any : \"\"\"GET /market/orderbook\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) params . setdefault ( 'depth' , depth ) return self . client . request ( 'GET' , '/market/orderbook' , response_model = OrderbookResponse , ** kwargs , )","title":"market_orderbook_get()"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_search_by_figi_get","text":"GET /market/search/by-figi Source code in tinvest/apis.py 289 290 291 292 293 294 295 296 297 298 299 def market_search_by_figi_get ( self , figi : str , ** kwargs : Any ) -> Any : \"\"\"GET /market/search/by-figi\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) return self . client . request ( 'GET' , '/market/search/by-figi' , response_model = SearchMarketInstrumentResponse , ** kwargs , )","title":"market_search_by_figi_get()"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_search_by_ticker_get","text":"GET /market/search/by-ticker Source code in tinvest/apis.py 301 302 303 304 305 306 307 308 309 310 311 def market_search_by_ticker_get ( self , ticker : str , ** kwargs : Any ) -> Any : \"\"\"GET /market/search/by-ticker\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'ticker' , ticker ) return self . client . request ( 'GET' , '/market/search/by-ticker' , response_model = MarketInstrumentListResponse , ** kwargs , )","title":"market_search_by_ticker_get()"},{"location":"tinvest/apis/#tinvest.apis.MarketApi.market_stocks_get","text":"GET /market/stocks Source code in tinvest/apis.py 224 225 226 227 228 229 230 231 def market_stocks_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /market/stocks\"\"\" return self . client . request ( 'GET' , '/market/stocks' , response_model = MarketInstrumentListResponse , ** kwargs , )","title":"market_stocks_get()"},{"location":"tinvest/apis/#tinvest.apis.OperationsApi","text":"","title":"OperationsApi"},{"location":"tinvest/apis/#tinvest.apis.OperationsApi.operations_get","text":"GET /operations Source code in tinvest/apis.py 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 def operations_get ( self , from_ : datetime_or_str , to : datetime_or_str , figi : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /operations\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'from' , isoformat ( from_ )) params . setdefault ( 'to' , isoformat ( to )) if figi : params . setdefault ( 'figi' , figi ) return self . client . request ( 'GET' , '/operations' , response_model = OperationsResponse , ** kwargs )","title":"operations_get()"},{"location":"tinvest/apis/#tinvest.apis.OrdersApi","text":"","title":"OrdersApi"},{"location":"tinvest/apis/#tinvest.apis.OrdersApi.orders_cancel_post","text":"POST /orders/cancel Source code in tinvest/apis.py 180 181 182 183 184 185 186 187 188 189 190 191 def orders_cancel_post ( self , order_id : str , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /orders/cancel\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'orderId' , order_id ) if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'POST' , '/orders/cancel' , response_model = Empty , ** kwargs )","title":"orders_cancel_post()"},{"location":"tinvest/apis/#tinvest.apis.OrdersApi.orders_get","text":"GET /orders Source code in tinvest/apis.py 134 135 136 137 138 139 140 141 142 def orders_get ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /orders\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'GET' , '/orders' , response_model = OrdersResponse , ** kwargs )","title":"orders_get()"},{"location":"tinvest/apis/#tinvest.apis.OrdersApi.orders_limit_order_post","text":"POST /orders/limit-order Source code in tinvest/apis.py 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 def orders_limit_order_post ( self , figi : str , body : LimitOrderRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /orders/limit-order\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/orders/limit-order' , response_model = LimitOrderResponse , ** kwargs , )","title":"orders_limit_order_post()"},{"location":"tinvest/apis/#tinvest.apis.OrdersApi.orders_market_order_post","text":"POST /orders/market-order Source code in tinvest/apis.py 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 def orders_market_order_post ( self , figi : str , body : MarketOrderRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /orders/market-order\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] params . setdefault ( 'figi' , figi ) if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/orders/market-order' , response_model = MarketOrderResponse , ** kwargs )","title":"orders_market_order_post()"},{"location":"tinvest/apis/#tinvest.apis.PortfolioApi","text":"","title":"PortfolioApi"},{"location":"tinvest/apis/#tinvest.apis.PortfolioApi.portfolio_currencies_get","text":"GET /portfolio/currencies Source code in tinvest/apis.py 207 208 209 210 211 212 213 214 215 216 217 218 219 220 def portfolio_currencies_get ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /portfolio/currencies\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'GET' , '/portfolio/currencies' , response_model = PortfolioCurrenciesResponse , ** kwargs , )","title":"portfolio_currencies_get()"},{"location":"tinvest/apis/#tinvest.apis.PortfolioApi.portfolio_get","text":"GET /portfolio Source code in tinvest/apis.py 195 196 197 198 199 200 201 202 203 204 205 def portfolio_get ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"GET /portfolio\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'GET' , '/portfolio' , response_model = PortfolioResponse , ** kwargs )","title":"portfolio_get()"},{"location":"tinvest/apis/#tinvest.apis.SandboxApi","text":"","title":"SandboxApi"},{"location":"tinvest/apis/#tinvest.apis.SandboxApi.sandbox_clear_post","text":"POST /sandbox/clear Source code in tinvest/apis.py 120 121 122 123 124 125 126 127 128 129 130 def sandbox_clear_post ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /sandbox/clear\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'POST' , '/sandbox/clear' , response_model = Empty , ** kwargs )","title":"sandbox_clear_post()"},{"location":"tinvest/apis/#tinvest.apis.SandboxApi.sandbox_currencies_balance_post","text":"POST /sandbox/currencies/balance Source code in tinvest/apis.py 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 def sandbox_currencies_balance_post ( self , body : SandboxSetCurrencyBalanceRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\" POST /sandbox/currencies/balance \"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/sandbox/currencies/balance' , response_model = Empty , ** kwargs , )","title":"sandbox_currencies_balance_post()"},{"location":"tinvest/apis/#tinvest.apis.SandboxApi.sandbox_positions_balance_post","text":"POST /sandbox/positions/balance Source code in tinvest/apis.py 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 def sandbox_positions_balance_post ( self , body : SandboxSetPositionBalanceRequest , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\" POST /sandbox/positions/balance \"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) kwargs . setdefault ( 'data' , body . json ()) return self . client . request ( 'POST' , '/sandbox/positions/balance' , response_model = Empty , ** kwargs )","title":"sandbox_positions_balance_post()"},{"location":"tinvest/apis/#tinvest.apis.SandboxApi.sandbox_register_post","text":"POST /sandbox/register Source code in tinvest/apis.py 60 61 62 63 64 65 66 67 68 69 70 def sandbox_register_post ( self , body : SandboxRegisterRequest , ** kwargs : Any ) -> Any : \"\"\" POST /sandbox/register \"\"\" kwargs . setdefault ( 'data' , body . json ( by_alias = True )) return self . client . request ( 'POST' , '/sandbox/register' , response_model = SandboxRegisterResponse , ** kwargs , )","title":"sandbox_register_post()"},{"location":"tinvest/apis/#tinvest.apis.SandboxApi.sandbox_remove_post","text":"POST /sandbox/remove Source code in tinvest/apis.py 108 109 110 111 112 113 114 115 116 117 118 def sandbox_remove_post ( self , broker_account_id : Optional [ str ] = None , ** kwargs : Any ) -> Any : \"\"\"POST /sandbox/remove\"\"\" kwargs . setdefault ( 'params' , {}) params = kwargs [ 'params' ] if broker_account_id : params . setdefault ( 'brokerAccountId' , broker_account_id ) return self . client . request ( 'POST' , '/sandbox/remove' , response_model = Empty , ** kwargs )","title":"sandbox_remove_post()"},{"location":"tinvest/apis/#tinvest.apis.UserApi","text":"","title":"UserApi"},{"location":"tinvest/apis/#tinvest.apis.UserApi.accounts_get","text":"GET /user/accounts Source code in tinvest/apis.py 335 336 337 338 339 def accounts_get ( self , ** kwargs : Any ) -> Any : \"\"\"GET /user/accounts\"\"\" return self . client . request ( 'GET' , '/user/accounts' , response_model = UserAccountsResponse , ** kwargs )","title":"accounts_get()"},{"location":"tinvest/streaming/","text":"tinvest/streaming.py Streaming __init__ ( self , token , * , session = None , state = None , reconnect_timeout = 3 , ws_close_timeout = 0 , receive_timeout = 5 , heartbeat = 3 ) special import tinvest events = tinvest . StreamingEvents () ... async def main (): await ( tinvest . Streaming ( \"TOKEN\" , state = { \"postgres\" : ... }) . add_handlers ( events ) . run () ) if __name__ == \"__main__\" : try : asyncio . run ( main ()) except KeyboardInterrupt : pass Source code in tinvest/streaming.py 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 def __init__ ( self , token : str , * , session : Optional [ aiohttp . ClientSession ] = None , state : Optional [ AnyDict ] = None , reconnect_timeout : float = 3 , ws_close_timeout : float = 0 , receive_timeout : Optional [ float ] = 5 , heartbeat : Optional [ float ] = 3 , ) -> None : \"\"\" ```python import tinvest events = tinvest.StreamingEvents() ... async def main(): await ( tinvest.Streaming(\"TOKEN\", state={\"postgres\": ...}) .add_handlers(events) .run() ) if __name__ == \"__main__\": try: asyncio.run(main()) except KeyboardInterrupt: pass ``` \"\"\" super () . __init__ () if not token : raise ValueError ( 'Token can not be empty' ) self . _api : str = STREAMING self . _token : str = token self . _session : aiohttp . ClientSession = session or aiohttp . ClientSession () self . _handlers : List [ _Handler ] = [] self . _state = state self . _reconnect_timeout = reconnect_timeout self . _ws_close_timeout = ws_close_timeout self . _receive_timeout = receive_timeout self . _heartbeat = heartbeat StreamingEvents import tinvest events = tinvest . StreamingEvents () candle ( self ) @events . candle () async def handle_candle ( api : tinvest . StreamingApi , payload : tinvest . CandleStreaming , server_time : datetime # [optional] if you want ): pass @events . candle () async def handle_candle ( api : tinvest . StreamingApi , payload : tinvest . CandleStreaming , ): pass Source code in tinvest/streaming.py 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 def candle ( self ): \"\"\" ```python @events.candle() async def handle_candle( api: tinvest.StreamingApi, payload: tinvest.CandleStreaming, server_time: datetime # [optional] if you want ): pass ``` ```python @events.candle() async def handle_candle( api: tinvest.StreamingApi, payload: tinvest.CandleStreaming, ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . candle ) cleanup ( self ) @events . cleanup () async def cleanup ( api : tinvest . StreamingApi ): await api . candle . unsubscribe ( \"BBG0013HGFT4\" , \"1min\" ) await api . orderbook . unsubscribe ( \"BBG0013HGFT4\" , 5 ) await api . instrument_info . unsubscribe ( \"BBG0013HGFT4\" ) Source code in tinvest/streaming.py 370 371 372 373 374 375 376 377 378 379 380 def cleanup ( self ): \"\"\" ```python @events.cleanup() async def cleanup(api: tinvest.StreamingApi): await api.candle.unsubscribe(\"BBG0013HGFT4\", \"1min\") await api.orderbook.unsubscribe(\"BBG0013HGFT4\", 5) await api.instrument_info.unsubscribe(\"BBG0013HGFT4\") ``` \"\"\" return self . _decorator_wrapper ( ServiceEventName . cleanup ) error ( self ) @events . error () async def handle_error ( api : tinvest . StreamingApi , payload : tinvest . ErrorStreaming ): pass Source code in tinvest/streaming.py 358 359 360 361 362 363 364 365 366 367 368 def error ( self ): \"\"\" ```python @events.error() async def handle_error( api: tinvest.StreamingApi, payload: tinvest.ErrorStreaming ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . error ) instrument_info ( self ) @events . instrument_info () async def handle_instrument_info ( api : tinvest . StreamingApi , payload : tinvest . InstrumentInfoStreaming ): pass Source code in tinvest/streaming.py 346 347 348 349 350 351 352 353 354 355 356 def instrument_info ( self ): \"\"\" ```python @events.instrument_info() async def handle_instrument_info( api: tinvest.StreamingApi, payload: tinvest.InstrumentInfoStreaming ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . instrument_info ) orderbook ( self ) @events . orderbook () async def handle_orderbook ( api : tinvest . StreamingApi , payload : tinvest . OrderbookStreaming ): pass Source code in tinvest/streaming.py 334 335 336 337 338 339 340 341 342 343 344 def orderbook ( self ): \"\"\" ```python @events.orderbook() async def handle_orderbook( api: tinvest.StreamingApi, payload: tinvest.OrderbookStreaming ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . orderbook ) reconnect ( self ) @events . reconnect () def handle_reconnect (): pass @events . reconnect () async def handle_reconnect (): pass Source code in tinvest/streaming.py 382 383 384 385 386 387 388 389 390 391 392 393 394 395 def reconnect ( self ): \"\"\" ```python @events.reconnect() def handle_reconnect(): pass ``` ```python @events.reconnect() async def handle_reconnect(): pass ``` \"\"\" return self . _decorator_wrapper ( ServiceEventName . reconnect ) startup ( self ) @events . startup () async def startup ( api : tinvest . StreamingApi ): await api . candle . subscribe ( \"BBG0013HGFT4\" , tinvest . CandleResolution . min1 ) await api . orderbook . subscribe ( \"BBG0013HGFT4\" , 5 , \"123ASD1123\" ) await api . instrument_info . subscribe ( \"BBG0013HGFT4\" ) Source code in tinvest/streaming.py 300 301 302 303 304 305 306 307 308 309 310 def startup ( self ): \"\"\" ```python @events.startup() async def startup(api: tinvest.StreamingApi): await api.candle.subscribe(\"BBG0013HGFT4\", tinvest.CandleResolution.min1) await api.orderbook.subscribe(\"BBG0013HGFT4\", 5, \"123ASD1123\") await api.instrument_info.subscribe(\"BBG0013HGFT4\") ``` \"\"\" return self . _decorator_wrapper ( ServiceEventName . startup )","title":"streaming.py"},{"location":"tinvest/streaming/#tinveststreamingpy","text":"","title":"tinvest/streaming.py"},{"location":"tinvest/streaming/#tinvest.streaming","text":"","title":"tinvest.streaming"},{"location":"tinvest/streaming/#tinvest.streaming.Streaming","text":"","title":"Streaming"},{"location":"tinvest/streaming/#tinvest.streaming.Streaming.__init__","text":"import tinvest events = tinvest . StreamingEvents () ... async def main (): await ( tinvest . Streaming ( \"TOKEN\" , state = { \"postgres\" : ... }) . add_handlers ( events ) . run () ) if __name__ == \"__main__\" : try : asyncio . run ( main ()) except KeyboardInterrupt : pass Source code in tinvest/streaming.py 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 def __init__ ( self , token : str , * , session : Optional [ aiohttp . ClientSession ] = None , state : Optional [ AnyDict ] = None , reconnect_timeout : float = 3 , ws_close_timeout : float = 0 , receive_timeout : Optional [ float ] = 5 , heartbeat : Optional [ float ] = 3 , ) -> None : \"\"\" ```python import tinvest events = tinvest.StreamingEvents() ... async def main(): await ( tinvest.Streaming(\"TOKEN\", state={\"postgres\": ...}) .add_handlers(events) .run() ) if __name__ == \"__main__\": try: asyncio.run(main()) except KeyboardInterrupt: pass ``` \"\"\" super () . __init__ () if not token : raise ValueError ( 'Token can not be empty' ) self . _api : str = STREAMING self . _token : str = token self . _session : aiohttp . ClientSession = session or aiohttp . ClientSession () self . _handlers : List [ _Handler ] = [] self . _state = state self . _reconnect_timeout = reconnect_timeout self . _ws_close_timeout = ws_close_timeout self . _receive_timeout = receive_timeout self . _heartbeat = heartbeat","title":"__init__()"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents","text":"import tinvest events = tinvest . StreamingEvents ()","title":"StreamingEvents"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents.candle","text":"@events . candle () async def handle_candle ( api : tinvest . StreamingApi , payload : tinvest . CandleStreaming , server_time : datetime # [optional] if you want ): pass @events . candle () async def handle_candle ( api : tinvest . StreamingApi , payload : tinvest . CandleStreaming , ): pass Source code in tinvest/streaming.py 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 def candle ( self ): \"\"\" ```python @events.candle() async def handle_candle( api: tinvest.StreamingApi, payload: tinvest.CandleStreaming, server_time: datetime # [optional] if you want ): pass ``` ```python @events.candle() async def handle_candle( api: tinvest.StreamingApi, payload: tinvest.CandleStreaming, ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . candle )","title":"candle()"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents.cleanup","text":"@events . cleanup () async def cleanup ( api : tinvest . StreamingApi ): await api . candle . unsubscribe ( \"BBG0013HGFT4\" , \"1min\" ) await api . orderbook . unsubscribe ( \"BBG0013HGFT4\" , 5 ) await api . instrument_info . unsubscribe ( \"BBG0013HGFT4\" ) Source code in tinvest/streaming.py 370 371 372 373 374 375 376 377 378 379 380 def cleanup ( self ): \"\"\" ```python @events.cleanup() async def cleanup(api: tinvest.StreamingApi): await api.candle.unsubscribe(\"BBG0013HGFT4\", \"1min\") await api.orderbook.unsubscribe(\"BBG0013HGFT4\", 5) await api.instrument_info.unsubscribe(\"BBG0013HGFT4\") ``` \"\"\" return self . _decorator_wrapper ( ServiceEventName . cleanup )","title":"cleanup()"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents.error","text":"@events . error () async def handle_error ( api : tinvest . StreamingApi , payload : tinvest . ErrorStreaming ): pass Source code in tinvest/streaming.py 358 359 360 361 362 363 364 365 366 367 368 def error ( self ): \"\"\" ```python @events.error() async def handle_error( api: tinvest.StreamingApi, payload: tinvest.ErrorStreaming ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . error )","title":"error()"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents.instrument_info","text":"@events . instrument_info () async def handle_instrument_info ( api : tinvest . StreamingApi , payload : tinvest . InstrumentInfoStreaming ): pass Source code in tinvest/streaming.py 346 347 348 349 350 351 352 353 354 355 356 def instrument_info ( self ): \"\"\" ```python @events.instrument_info() async def handle_instrument_info( api: tinvest.StreamingApi, payload: tinvest.InstrumentInfoStreaming ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . instrument_info )","title":"instrument_info()"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents.orderbook","text":"@events . orderbook () async def handle_orderbook ( api : tinvest . StreamingApi , payload : tinvest . OrderbookStreaming ): pass Source code in tinvest/streaming.py 334 335 336 337 338 339 340 341 342 343 344 def orderbook ( self ): \"\"\" ```python @events.orderbook() async def handle_orderbook( api: tinvest.StreamingApi, payload: tinvest.OrderbookStreaming ): pass ``` \"\"\" return self . _decorator_wrapper ( EventName . orderbook )","title":"orderbook()"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents.reconnect","text":"@events . reconnect () def handle_reconnect (): pass @events . reconnect () async def handle_reconnect (): pass Source code in tinvest/streaming.py 382 383 384 385 386 387 388 389 390 391 392 393 394 395 def reconnect ( self ): \"\"\" ```python @events.reconnect() def handle_reconnect(): pass ``` ```python @events.reconnect() async def handle_reconnect(): pass ``` \"\"\" return self . _decorator_wrapper ( ServiceEventName . reconnect )","title":"reconnect()"},{"location":"tinvest/streaming/#tinvest.streaming.StreamingEvents.startup","text":"@events . startup () async def startup ( api : tinvest . StreamingApi ): await api . candle . subscribe ( \"BBG0013HGFT4\" , tinvest . CandleResolution . min1 ) await api . orderbook . subscribe ( \"BBG0013HGFT4\" , 5 , \"123ASD1123\" ) await api . instrument_info . subscribe ( \"BBG0013HGFT4\" ) Source code in tinvest/streaming.py 300 301 302 303 304 305 306 307 308 309 310 def startup ( self ): \"\"\" ```python @events.startup() async def startup(api: tinvest.StreamingApi): await api.candle.subscribe(\"BBG0013HGFT4\", tinvest.CandleResolution.min1) await api.orderbook.subscribe(\"BBG0013HGFT4\", 5, \"123ASD1123\") await api.instrument_info.subscribe(\"BBG0013HGFT4\") ``` \"\"\" return self . _decorator_wrapper ( ServiceEventName . startup )","title":"startup()"}]}